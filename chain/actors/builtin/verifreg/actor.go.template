// Code generated by: `make actors-gen`. DO NOT EDIT.
package verifreg

import (
	"github.com/ipfs/go-cid"
	"golang.org/x/xerrors"

	"github.com/filecoin-project/go-address"
	"github.com/filecoin-project/go-state-types/abi"

	"github.com/filecoin-project/go-state-types/cbor"
{{range .versions}}
	builtin{{.}} "github.com/filecoin-project/specs-actors{{import .}}actors/builtin"
{{- end}}

	"github.com/filecoin-project/lotus/chain/types"

	"github.com/filecoin-project/sentinel-visor/chain/actors/adt"
	"github.com/filecoin-project/sentinel-visor/chain/actors/builtin"
)

func init() {
{{range .versions}}
	builtin.RegisterActorState(builtin{{.}}.VerifiedRegistryActorCodeID, func(store adt.Store, root cid.Cid) (cbor.Marshaler, error) {
		return load{{.}}(store, root)
	})
{{end}}
}

var (
	Address = builtin{{.latestVersion}}.VerifiedRegistryActorAddr
	Methods = builtin{{.latestVersion}}.MethodsVerifiedRegistry
)

func AllCodes() []cid.Cid {
	return []cid.Cid{ {{range .versions}}
        builtin{{.}}.VerifiedRegistryActorCodeID,
    {{- end}}
    }
}

func Load(store adt.Store, act *types.Actor) (State, error) {
	switch act.Code {
{{range .versions}}
	case builtin{{.}}.VerifiedRegistryActorCodeID:
		return load{{.}}(store, act.Head)
{{end}}
	}
	return nil, xerrors.Errorf("unknown actor code %s", act.Code)
}

type State interface {
	cbor.Marshaler

	Code() cid.Cid

	RootKey() (address.Address, error)
	VerifiedClientDataCap(address.Address) (bool, abi.StoragePower, error)
	VerifierDataCap(address.Address) (bool, abi.StoragePower, error)
	ForEachVerifier(func(addr address.Address, dcap abi.StoragePower) error) error
	ForEachClient(func(addr address.Address, dcap abi.StoragePower) error) error

	verifiers() (adt.Map, error)
	verifiedClients() (adt.Map, error)
}

type VerifierInfo struct {
	Address address.Address
	DataCap abi.StoragePower
}

type VerifierChange struct {
	Before VerifierInfo
	After  VerifierInfo
}

type VerifierChanges struct {
	Added    []VerifierInfo
	Modified []VerifierChange
	Removed  []VerifierInfo
}
