// Code generated by github.com/whyrusleeping/cbor-gen. DO NOT EDIT.

package cborable

import (
	"fmt"
	"io"
	"math"
	"sort"

	types "github.com/filecoin-project/lotus/chain/types"
	cid "github.com/ipfs/go-cid"
	cbg "github.com/whyrusleeping/cbor-gen"
	xerrors "golang.org/x/xerrors"
)

var _ = xerrors.Errorf
var _ = cid.Undef
var _ = math.E
var _ = sort.Sort

var lengthBufModelStateContainer = []byte{131}

func (t *ModelStateContainer) MarshalCBOR(w io.Writer) error {
	if t == nil {
		_, err := w.Write(cbg.CborNull)
		return err
	}

	cw := cbg.NewCborWriter(w)

	if _, err := cw.Write(lengthBufModelStateContainer); err != nil {
		return err
	}

	// t.Current (types.TipSet) (struct)
	if err := t.Current.MarshalCBOR(cw); err != nil {
		return err
	}

	// t.Executed (types.TipSet) (struct)
	if err := t.Executed.MarshalCBOR(cw); err != nil {
		return err
	}

	// t.Models (cid.Cid) (struct)

	if err := cbg.WriteCid(cw, t.Models); err != nil {
		return xerrors.Errorf("failed to write cid field t.Models: %w", err)
	}

	return nil
}

func (t *ModelStateContainer) UnmarshalCBOR(r io.Reader) (err error) {
	*t = ModelStateContainer{}

	cr := cbg.NewCborReader(r)

	maj, extra, err := cr.ReadHeader()
	if err != nil {
		return err
	}
	defer func() {
		if err == io.EOF {
			err = io.ErrUnexpectedEOF
		}
	}()

	if maj != cbg.MajArray {
		return fmt.Errorf("cbor input should be of type array")
	}

	if extra != 3 {
		return fmt.Errorf("cbor input had wrong number of fields")
	}

	// t.Current (types.TipSet) (struct)

	{

		b, err := cr.ReadByte()
		if err != nil {
			return err
		}
		if b != cbg.CborNull[0] {
			if err := cr.UnreadByte(); err != nil {
				return err
			}
			t.Current = new(types.TipSet)
			if err := t.Current.UnmarshalCBOR(cr); err != nil {
				return xerrors.Errorf("unmarshaling t.Current pointer: %w", err)
			}
		}

	}
	// t.Executed (types.TipSet) (struct)

	{

		b, err := cr.ReadByte()
		if err != nil {
			return err
		}
		if b != cbg.CborNull[0] {
			if err := cr.UnreadByte(); err != nil {
				return err
			}
			t.Executed = new(types.TipSet)
			if err := t.Executed.UnmarshalCBOR(cr); err != nil {
				return xerrors.Errorf("unmarshaling t.Executed pointer: %w", err)
			}
		}

	}
	// t.Models (cid.Cid) (struct)

	{

		c, err := cbg.ReadCid(cr)
		if err != nil {
			return xerrors.Errorf("failed to read cid field t.Models: %w", err)
		}

		t.Models = c

	}
	return nil
}
