version: '3.5'

services:
  timescaledb:
    container_name: timescaledb
    image: timescale/timescaledb:2.5.0-pg13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - timescaledb:/var/lib/postgresql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:1.19
    ports:
      - "6831:6831/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"

  prometheus:
    image: prom/prometheus:v2.1.0
    volumes:
      - ./build/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: always

  grafana:
    image: grafana/grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./build/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./build/grafana/config.monitoring
    restart: always

  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass password
    volumes:
      - redis:/data

 #lily:
 #  container_name: lily
 #  ## Select (only one) image
 #  #image: filecoin/lily:v0.10.1
 #  image: filecoin/lily:v0.10.1-calibnet
 #  env_file:
 #    ## Check envvars for configurable options
 #    - ./build/lily/docker.env
 #  depends_on:
 #    - prometheus
 #    - timescaledb
 #    - jaeger
 #    - redis
 #  ports:
 #    - '1234:1234'
 #  volumes:
 #    - lily_data:/var/lib/lily
 #    - ./build/lily/docker_init.sh:/usr/bin/docker_init.sh
 #  entrypoint: /usr/bin/docker_init.sh
 #  command:
 #    - daemon

volumes:
  timescaledb: {}
  prometheus_data: {}
  grafana_data: {}
  lily_data: {}
  redis:
    driver: local
